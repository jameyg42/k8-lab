kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: pod-reader
rules:
  - apiGroups: [""]
#    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: demo-app
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: demo-app-pod-reader
subjects:
- kind: ServiceAccount
  name: demo-app
  apiGroup: ""
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-config-demo
data:
  application.properties: |
    demo.configmap.loaded=true
    additional.property.added=yes it was
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-config-demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-config-demo-app
  template:
    metadata:
      labels:
        app: spring-config-demo-app
    spec:
      containers:
      - image: spring-config:0.0.1-SNAPSHOT
        name: spring-config-demo-app
        imagePullPolicy: Never

---
apiVersion: v1
kind: Service
metadata:
  name: spring-config-demo-app
  labels:
    app: spring-config-demo-app
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30080
  selector:
    app: spring-config-demo-app
